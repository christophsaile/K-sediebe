---
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
import BaseLayout from '@layouts/baseLayout.astro';
import Ingredients from '@components/Ingredients.astro';
import { client } from '@lib/contentfulClient';
import type {
	IRecipeFields,
  IIngredientFields,
	// @ts-ignore
} from '@types/generated/contentful.d.ts';

interface IIngredientsUnresolved {
  amount: string;
  ingredientId: string;
}

export async function getStaticPaths() {
  const data = await client
    .getEntries<IRecipeFields>({
      content_type: 'recipe',
    })
    .then((entries) => entries.items)
    .catch(() => []);

  return data.map((recipe) => {
    return {
      params: { slug: recipe.fields.slug },
      props: { recipe },
    };
  });
}

const { slug } = Astro.params;
const { recipe } = Astro.props;
const permalink = `https://kaesediebe.netlify.app/recipe/${slug}`;
const {
  title,
  duration,
  vegetarian,
  category,
  ingredients,
  description,
  image,
} = recipe.fields as IRecipeFields;

const getIngredientIds: string[] = ingredients?.map(
  (elem: IIngredientsUnresolved) => elem.ingredientId
);
const ingredientList: IIngredientFields = await client
  .getEntries<IIngredientFields>({
    content_type: 'ingredient',
    'sys.id[in]': getIngredientIds.join(),
  })
  .then((entries) =>
    ingredients.map((elem: IIngredientsUnresolved) => {
      const itemName = entries.items.find(
        (items) => items.sys.id === elem.ingredientId
      );
      return { amount: elem.amount, title: itemName?.fields.title };
    })
  );

const htmlDescription = documentToHtmlString(description);
---

<BaseLayout title={title} description={title} permalink={permalink}>
  <div class='card bg-base-100 shadow-xl'>
    {image ? (
      <img src={image?.fields.file.url} alt={image?.fields.file.fileName} />
    ) : (
      <img src="assets/placeholder.png" alt="Platzhalter Bild" />
    )}
    <div class='card-body p-4'>
      <h2 class='card-title'>{title}</h2>
      <div class='card-actions justify-end'>
        {vegetarian && <div class="badge badge-outline">Veggi</div>}
        <div class='badge badge-outline'>{category}</div>
        <div class='badge badge-outline'>{duration}</div>
      </div>
    </div>
  </div>
  <Ingredients data={ingredientList} />
  <div set:html={htmlDescription}></div>
</BaseLayout>
